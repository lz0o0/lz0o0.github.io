[{"content":"\r前言 (๑✦ˑ_✦)前年用 BT+Wordpress+阿里轻量化服务器 搭了个网站，当时挺上头的，写了好几篇博客\u0026hellip;后来由于服务确实卡顿，偶尔容易出问题，再加上服务器每月有开销，当时又忙着准备保研和毕设，慢慢就搁置了，Blog弄起来还挺上头的!\n前段时间，我导提到说作为技术人，要有数字人的意识，将自己的一生都数字化，后面回想起来，尽管时空不同步，但却能在思维、意识上和某些小伙伴交流，属实颇为浪漫和炫酷，也蛮有价值的！不愧是我导doge!(▼O▼ﾒ)\n用清明两天的时间把整个框架搞起来了，后面只用更新内容就行\u0026hellip;复盘来看其实没什么大问题，但是网上的教程和博文写的零零散散的，没有很系统的讲，基本看完都是半碗水的感觉。另外搁置HTML和CSS比较久了（上次写网页还是大二\u0026hellip;现在都研一了\u0026hellip;(▼O▼ﾒ)），总之遇到不少问题\u0026hellip;\n摘要 Okay，下面复盘下构筑过程、问题和解决方法。整体来说分成三个部分：\n明确建站框架和基本流程：hugo+git、hexo+git、bt+wordpress 内容设计与自定义调整：结构熟悉（hugo\u0026amp;theme、自定义修改（需求\u0026amp;设计 内容发布与部署：内容与数据维护、公网发布、F\u0026amp;R 上述内容可以概括成三个问题，如何建站？建什么样的站？\n1.什么是建站？ 私以为博客的核心是提供一种管理和分享模式，通过博客可以记录并组织个人零碎的知识、经验甚至于心理感受，类别网络概念就是你自己的数字日志；虽然有本地博客和公网发布一说，但核心在乎个人的取舍（but if你借助某些平台发布的话，内容可能要作脱敏，like git）\u0026hellip;总言之，博客能够帮你更好地组织你的所想、所学、所得，并可能是你分享和展示自己的一种媒介，这是数字化带给个人的福荫\u0026hellip; 2.如何建站？ 怎么建站？核心有两个，一个内容托管平台、一个内容加工平台。托管平台负责存储、维护你的内容，在有人访问时，通过这些托管平台输送出去，托管平台的核心是集成了存储和web服务，使得内容在公网可见可得。加工平台负责内容组织、美化和打包，讲你输出的内容作统一组织、推送至托管平台。而你理论上专注内容输出即可，你如果想自定义这个过程，主动输出，那你就还需要完成三者的协调维护，这就是建站所需做的。（在你动手之前，我多说一句，你可能并不需要如此费力损兵，毕竟，选择QQ、We-Chat、小红书、抖音等等，可以满足绝大多数的需求（如果你还是想有自己的小金库，那么朋友，我们继续~） 3.建什么样的站？ 建站作何用，决定了你需要建什么样的站：搭建购物平台？那你肯定不想每天花时间维护、希望简单易上手，那么基于wordpress建站可鞥比较适合你，这种方式，你需要一台服务器（满足公网访问，一个域名（满足用户友好接入，你只需要点击、撰写内容、推送发布即可，非常简单，但大站、复杂代码结构的通病就是容易卡顿、维护需要持续燃烧你的钱包；个人写作、技术博客？网站绝对能承担你的需求，但你可能不需要那么多花里胡哨的功能，也不想为它们买单，那么DIY就是你的理想选择。直接讲建议，如果你更在意美观，那么在你知道建站的框架后，你可以对应去找hexo的博文了，hexo的美化生态更丰富；相比之下，hugo构建静态网页为主的模式可能更快更轻量，如果你的内容体量预计不小并且对访问速度有一定要求，那么hugo将是你不错的选择 主要内容展开 1.明确建站框架和基本流程 建站框架的选用基本上决定了，个人blog此后的管理方式、维护成本、访问速度以及blog本身的能力上下限。目前有几种方式较为主流的方式，你可能听过甚至曾经用过Hexo、Hugo、Wordpress，还有一些小众的比如Mix space\n2.内容设计与自定义调整 关键需求与对应文件结构 问题1：菜单栏用户块新增子块，填充铭言 需求：希望在博客名下面加一个子块，附写格言\n解决方案 需求和做法都很明确，对HTML和CSS进行修改即可，F12定位博客名所在的html块，修改对应文件，新增子块，由于可能对显示作特殊要求，需要对css修改\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;nav class=\u0026#34;flex flex-col space-y-1\u0026#34;\u0026gt; {{ if not .Site.Params.disableTextInHeader | default true }} \u0026lt;a href=\u0026#34;{{ \u0026#34;\u0026#34; | relLangURL }}\u0026#34; class=\u0026#34;text-base font-medium text-gray-500 hover:text-gray-900\u0026#34;\u0026gt;{{ .Site.Title | markdownify }}\u0026lt;/a\u0026gt; {{ end }} {{ with .Site.Params.subtitle }} \u0026lt;div class=\u0026#34;subtitle text-sm text-gray-400\u0026#34;\u0026gt; {{ . }} \u0026lt;/div\u0026gt; {{ end }} \u0026lt;/nav\u0026gt; 1 2 3 4 5 /* Subtitle */ .subtitle { font-size: 0.75rem; /* 比主标题字体小 */ color: rgba(75, 85, 99, 0.8); /* 颜色和透明度 */ } 修改文件路径：\nhtml = D:\\LZ0o0\\themes\\blowfish\\layouts\\partials\\header\\basic.html\ncss = D:\\LZ0o0\\themes\\blowfish\\assets\\css\\compiled\\main.css\n问题2：博客头像和菜单栏对齐 需求：博客头像和后面菜单条的高度不一致，留白影响美观\n解决方案 对HTML和CSS进行修改，确保头像和菜单栏高度一致，并保持它们在水平线上对齐。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;div class=\u0026#34;header-container flex items-center justify-between\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ \u0026#34;\u0026#34; | relLangURL }}\u0026#34; class=\u0026#34;flex items-center\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;{{ .Site.Title | markdownify }}\u0026lt;/span\u0026gt; {{ if eq $logo.MediaType.SubType \u0026#34;svg\u0026#34; }} \u0026lt;span class=\u0026#34;logo object-scale-down object-left nozoom\u0026#34;\u0026gt; {{ $logo.Content | safeHTML }} \u0026lt;/span\u0026gt; {{ else }} \u0026lt;img src=\u0026#34;{{ $logo.RelPermalink }}\u0026#34; width=\u0026#34;{{ div $logo.Width 2 }}\u0026#34; height=\u0026#34;{{ div $logo.Height 2 }}\u0026#34; class=\u0026#34;logo max-h-[5rem] max-w-[5rem] object-scale-down object-left nozoom\u0026#34; alt=\u0026#34;{{ .Site.Title }}\u0026#34; /\u0026gt; {{ end }} \u0026lt;/a\u0026gt; \u0026lt;div class=\u0026#34;flex flex-1 items-center justify-between\u0026#34;\u0026gt; \u0026lt;nav class=\u0026#34;flex flex-col space-y-1\u0026#34;\u0026gt; \u0026lt;!-- 菜单项 --\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 .header-container { height: 5rem; /* 确保容器的高度一致 */ display: flex; align-items: center; /* 垂直居中 */ justify-content: space-between; /* 水平分布 */ } .header-container .logo, .header-container .title-container { height: 100%; display: flex; align-items: center; /* 垂直居中 */ } .header-container .logo img { height: auto; max-height: 100%; } .header-container .title-container { margin-left: 1rem; /* 可以根据需要调整间距 */ } 修改文件路径：\nhtml = D:\\LZ0o0\\themes\\blowfish\\layouts\\partials\\header\\basic.html\ncss = D:\\LZ0o0\\themes\\blowfish\\assets\\css\\compiled\\main.css\n问题3：将搜索按钮换成条状搜索框 需求：调整占位，搜索按钮换成条状（后增内容，弃用本条\n解决方案 修改html将搜索按钮替换为一个条状的搜索框，并添加相应的CSS样式。\n1 2 3 4 5 6 7 8 9 10 {{ if .Site.Params.enableSearch | default false }} \u0026lt;div class=\u0026#34;search-container flex items-center\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; id=\u0026#34;search-input\u0026#34; aria-label=\u0026#34;Search\u0026#34; placeholder=\u0026#34;Search...\u0026#34; class=\u0026#34;search-input text-base border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-600 dark:focus:ring-primary-400\u0026#34; /\u0026gt; \u0026lt;button id=\u0026#34;search-button\u0026#34; aria-label=\u0026#34;Search\u0026#34; class=\u0026#34;search-button text-base hover:text-primary-600 dark:hover:text-primary-400 ml-2\u0026#34; title=\u0026#34;{{ i18n \u0026#34;search.open_button_title\u0026#34; }}\u0026#34;\u0026gt; {{ partial \u0026#34;icon.html\u0026#34; \u0026#34;search\u0026#34; }} \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; {{ end }} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 .search-container { display: flex; align-items: center; } .search-input { width: 200px; /* 设置搜索框的宽度 */ transition: width 0.3s ease-in-out; /* 添加过渡效果 */ } .search-input:focus { width: 300px; /* 在聚焦时扩展搜索框的宽度 */ } .search-button { background: none; border: none; cursor: pointer; padding: 0; margin-left: 8px; display: flex; align-items: center; } 修改文件路径：同上个问题\n3.内容发布与部署 内容发布注意事项，以及公网部署方法\n","permalink":"https://lz0o0.github.io/zh/posts/blog-manage+output/","summary":"\u003c!--\r\n# This Blog = Hugo+Blowfish+Github\r\n--\u003e\r\n\u003cp\u003e\u003cimg alt=\"建站核心\" loading=\"lazy\" src=\"/img/mlk.jpg\" title=\"夜深了，睡觉！\"\u003e\u003c/p\u003e\n\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e(๑✦ˑ_✦)前年用 \u003cem\u003eBT+Wordpress+阿里轻量化服务器\u003c/em\u003e 搭了个网站，当时挺上头的，写了好几篇博客\u0026hellip;后来由于服务确实卡顿，偶尔容易出问题，再加上服务器每月有开销，当时又忙着准备保研和毕设，慢慢就搁置了，Blog弄起来还挺上头的!\u003c/p\u003e","title":"Blog \u003e Manage and Output"},{"content":"Introduction Welcom 我是 lz0o0 !\n很高兴你能看到，这是我的第一篇博客哦~\n","permalink":"https://lz0o0.github.io/zh/posts/first-blog/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003eWelcom\u003c/em\u003e \u003cstrong\u003e我是 lz0o0 !\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e很高兴你能看到，这是我的第一篇博客哦~\u003c/strong\u003e\u003c/p\u003e","title":"My First Post"},{"content":"\n问题描述 在本地使用 Hugo 启动服务器时，网站样式能够正常显示，但部署到 GitHub Pages 后，样式无法加载。通过浏览器 F12 调试发现，控制台报错如下：\n1 Failed to find a valid digest in the \u0026#39;integrity\u0026#39; attribute for resource \u0026#39;https://lz0o0.github.io/assets/css/stylesheet.6da9a63d25a9608bca2f7f907a0，30e887a7dd3c3f3918e4cc113129361414bda.css\u0026#39; with computed SHA-256 integrity \u0026#39;9J1myq6eoP1D8h8p5xqNPihFF+13Dyqob6ASlTrTye8=\u0026#39;. The resource has been blocked. SRI和校验失败：SRI 是一种安全机制，用于确保在加载资源时，它们的内容与预期的哈希值一致。如果资源的实际哈希值与 HTML 文件中 integrity 属性定义的不一致，浏览器会阻止加载资源。\n原因\u0026amp;解法 根据报错信息，基本确认问题是因为 Subresource Integrity (SRI) 校验时hash值不匹配，CSS加载失败，从而导致网页样式无法正常显示，无法看到多彩的网页。\n网上给的解决办法比较多，主要是如下几种：\n1. Cloudflare对 JS 和 CSS，默认执行\u0026quot;Auto Minify\u0026quot;，文件压缩后导致校验失效；对应禁用选项，刷新缓存即可\r2. 修改 Hugo 的文件，禁用指纹校验选项：在config.yaml或者hugo.yaml中添加以下代码\r1 2 3 params: assets: disableFingerprinting: true 3. 修改 html 文件索引入口，禁用 SRI 校验：将文件`(themes\\PaperMod\\layouts\\partials\\head.html)`中的 **integrity** 参数索引都置空`(integrity=\u0026quot;\u0026quot;)`\r方法1我不知道在哪配置，所以没有实操，但我认为可能是压缩的问题，因为本地没问题 方法2比较合理，当我实际配置后没什么效果 通过方法3，本鲤成功显示了CSS样式，但注意，你需要把文件中所有的 integrity 参数索引都置空，大部分教程只提示改(integrity=\u0026quot;{{ $stylesheet.Data.Integrity }}\u0026quot;)，有时候这么改，另外的地方索引时还是会报错，因此建议你都置空\nMind:你可以按照231的顺序都试试，能解决最好，前端的问题真是多种多样，甚至有说因为LF和CRLF问题的（我觉得比较有用的描述或blog文档，放在文末，供你参考） 小结 本文描述了Hugo+Papermod部署到github pages时，由于SRI校验失败，导致CSS文件无法正常加载不显示网页样式内容的问题，文档列举了三种主要的解决方法，分析了可能的问题（may优化导致校验失效），博主通过修改配置的html索引，禁用 SRI 校验选项，成功解决了这个问题。\n如果你知道校验失败的具体原因，或者也在部署过程中，遇到新的问题，欢迎留言讨论~\nRefer: https://swopnil.com/blog/valid-digest-integrity-error-hugo-styling/ https://github.com/alanorth/hugo-theme-bootstrap4-blog/issues/53 https://stackoverflow.com/questions/65040931/hugo-failed-to-find-a-valid-digest-in-the-integrity-attribute-for-resource ","permalink":"https://lz0o0.github.io/zh/posts/css_failure-try-to-ban-sri/","summary":"本文分析并解决了Hugo+Papermod部署到github pages时，由于SRI校验失败，导致CSS文件无法正常加载不显示网页样式内容的问题","title":"解决hugo部署到github后CSS样式无法显示的问题"},{"content":"About me 😛我是 Lz0o0 ，目前在中国科学院大学【IIE-Mesa】，攻读博士学位\n😊我喜欢探索新技术，认识新朋友，希望通过博客记录、分享我的学习心得\n🤯How to find Me? 🐧@1251673221 📬lizhuo@iie.ac.cn\nthis blog? 希望能通过这个博客记录我的成长，如果对相关内容感兴趣，欢迎随时联系我！\nmy manias? yes! ⚽\u0026gt;🚴🏼\u0026gt;🏂🏻\u0026gt;🎧\u0026gt;🎮 旧时代的残党（剑风、死神、海贼、混沌武士\u0026hellip; Research Interests: AI+（MCP\u0026hellip; 网络流量分析 网络资源测绘 恶意行为检测 Achievement： There will be bread, and there will be milk too!\nPpaper: Patent: Areas involved: Too busy now, this will show later~\n","permalink":"https://lz0o0.github.io/zh/about/","summary":"\u003ch1 id=\"about-me\"\u003eAbout me\u003c/h1\u003e\n\u003cp\u003e\u003cimg alt=\"Self-Img\" loading=\"lazy\" src=\"/img/guts.png#center\"\u003e\u003c/p\u003e\n\u003c!-- \u003cdiv align=\"center\"\u003e\r\n    \u003cimg src=\"img/sd.gif\" alt=\"图片描述\" width=\"700\" height=\"auto\"\u003e\r\n\u003c/div\u003e --\u003e\r\n\u003cp\u003e  😛我是 Lz0o0 ，目前在中国科学院大学【IIE-Mesa】，攻读博士学位\u003cbr\u003e\n  😊我喜欢探索新技术，认识新朋友，希望通过博客记录、分享我的学习心得\u003cbr\u003e\n  🤯How to find Me? 🐧\u003ca href=\"https://im.qq.com/index/\"\u003e@1251673221\u003c/a\u003e 📬\u003ca href=\"https://mail.qq.com/\"\u003elizhuo@iie.ac.cn\u003c/a\u003e\u003c/p\u003e","title":"About"},{"content":"内网穿透：借助Frp，增强游戏体验\n配置frp服务端 git：https://github.com/fatedier/frp/releases 解压：tar -zxvf frp_0.61.2_linux_amd64.tar.gz\n文件中包含 frpc、frpc.toml；frps、frps.toml；以及LICENSE文件，分别对应客户端和服务端的配置项设置，可删去相对的内容\n配置服务端设置项 frps.toml文件配置： 1 2 3 4 5 6 7 8 9 bindPort = 7000 webServer.addr = \u0026#34;0.0.0.0\u0026#34; webServer.port = 7500 webServer.user = \u0026#34;admin\u0026#34; webServer.password = \u0026#34;admin\u0026#34; auth.method=\u0026#34;token\u0026#34; auth.token = \u0026#34;passtoken\u0026#34; 配置后启动即可，成功会显示初始化日志：./frps -c frps.toml，随后可以访问公网IP：7500网站查看访问面板\n后台挂载进程 利用systemd启动后台进程挂载，创建文件：vim /etc/systemd/system/frps.service，文件内容如下(指定了访问面板的信息和绑定端口)：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 [Unit] Description = frp server After = network.target syslog.target Wants = network.target [Service] Type=simple ExecStart = /dev-ops/frp/frps -c /dev-ops/frp/frps.toml ExecStop=/bin/kill $MAINPID Restart=always RestartSec=5 [Install] WantedBy = multi-user.target 文件创建成功后，启动即可：\n1 2 systemctl start frps systemctl status frps 配置服务端设置项 配置frpc.toml文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #你的云服务器公网ip serverAddr = \u0026#34;x.x.x.x\u0026#34; #连接到云服务器端口,需要和frps.toml配置文件中端口一致 serverPort = 7000 auth.method = \u0026#34;token\u0026#34; auth.token = \u0026#34;passtoken\u0026#34; #开放端口连接 [[proxies]] name = \u0026#34;test-tcp\u0026#34; type = \u0026#34;tcp\u0026#34; localIP = \u0026#34;127.0.0.1\u0026#34; localPort = 8080 remotePort = 6100 # 服务器需要开放该端口 #共享文件访问 [[proxies]] name = \u0026#34;d_drive\u0026#34; type = \u0026#34;tcp\u0026#34; remotePort = 6001 # 服务器上用于访问的端口，需要开放该端口 [proxies.plugin] type = \u0026#34;static_file\u0026#34; localPath = \u0026#34;D:\\\\\u0026#34; # 要对外暴露的目录 stripPrefix = \u0026#34;d_drive\u0026#34; # 访问路径名，此处即http://x.x.x.x:6001/d_drive/ httpUser = \u0026#34;username\u0026#34; # 用户名 httpPassword = \u0026#34;password\u0026#34; # 密码 Windows 上运行 frpc 确保 frpc.exe 和 frpc.toml 位于同一目录。\n打开命令提示符（cmd）或 PowerShell，切换到 frpc.exe 所在目录：\n1 cd path\\to\\frp 执行以下命令启动客户端：\n1 .\\frpc.exe -c frpc.toml 如果提示权限问题，确保当前用户有执行权限，或者以管理员身份运行命令提示符。\n如果仍然无法执行，检查以下内容：\n确保 frpc.exe 文件未被杀毒软件拦截。 确保 frpc.toml 文件路径正确，且格式无误。 使用以下命令查看详细日志： 1 frpc.exe -c frpc.toml --log_level debug 此时两端已经互联，可以访问内网的文件 ","permalink":"https://lz0o0.github.io/zh/posts/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-%E7%94%A8frp%E6%89%93%E6%B8%B8%E6%88%8F/","summary":"\u003cp\u003e内网穿透：借助Frp，增强游戏体验\u003c/p\u003e\n\u003ch2 id=\"配置frp服务端\"\u003e配置frp服务端\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003egit：https://github.com/fatedier/frp/releases\n解压：tar -zxvf frp_0.61.2_linux_amd64.tar.gz\u003cbr\u003e\n文件中包含 frpc、frpc.toml；frps、frps.toml；以及LICENSE文件，分别对应客户端和服务端的配置项设置，可删去相对的内容\u003c/p\u003e","title":"内网穿透 用frp打游戏"},{"content":"","permalink":"https://lz0o0.github.io/zh/archive/","summary":"archives","title":"⏱ 时间轴"}]