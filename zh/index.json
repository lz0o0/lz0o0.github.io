[{"content":"\rHiii！ 我是 lz0o0 ，以后在本站就自称本鲤了😎！ 听听我喜欢的歌吧~\n","permalink":"https://lz0o0.github.io/zh/posts/%E4%BD%A0%E5%A5%BD%E6%9C%8B%E5%8F%8B/","summary":"\u003c!-- {{\u003c music id=\"557578993\" type=\"song\" server=\"netease\" \u003e}}\r\n --\u003e\r\n\u003cp\u003e\u003cem\u003eHiii！\u003c/em\u003e   \u003cstrong\u003e我是 lz0o0 ，以后在本站就自称本鲤了😎！\u003c/strong\u003e  \u003cstrong\u003e听听我喜欢的歌吧~\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv id=\"player0\" style=\"--background-url: url('https://lizhuo.space/berserk-12.jpg');\"\u003e\r\n\u003cscript\u003e\r\n    const ap0 = new APlayer({\r\n        container: document.getElementById('player0'),\r\n        audio: [\r\n            {\r\n                name: 'Guts',\r\n                artist: '平泽进',\r\n                url: 'https://lizhuo.space/Guts.flac',\r\n                cover: 'https://lizhuo.space/berserk-16.png'\r\n            }\r\n        ]\r\n    });\r\n\u003c/script\u003e\r\n\u003c/div\u003e\r\n\u003cdiv id=\"player1\" style=\"--background-url: url('https://lizhuo.space/eva-3.png');\"\u003e\r\n\u003cscript\u003e\r\n    const ap1 = new APlayer({\r\n        container: document.getElementById('player1'),\r\n        audio: [\r\n            {\r\n                name: 'Komm, süsser Tod／甘き死よ、来たれ (M-10 Director’s Edit. Version)',\r\n                artist: 'arianne schreiber',\r\n                url: 'https://lizhuo.space/Komm%2C%20s%C3%BCsser%20Tod%20%EF%BC%8F%E7%94%98%E3%81%8D%E6%AD%BB%E3%82%88%E3%80%81%E6%9D%A5%E3%81%9F%E3%82%8C%20(M-10%20Director%E2%80%99s%20Edit.%20Version).flac',\r\n                cover: 'https://lizhuo.space/evas.png'\r\n            }\r\n        ]\r\n    });\r\n\u003c/script\u003e\r\n\u003c/div\u003e\r\n\u003cdiv id=\"player2\" style=\"--background-url: url('');\"\u003e\r\n    \u003cscript\u003e\r\n        const ap2 = new APlayer({\r\n            container: document.getElementById('player2'),\r\n            audio: [\r\n                {\r\n                    name: 'Aruarian dance',\r\n                    artist: 'Nujabes',\r\n                    url: 'https://lizhuo.space/aruarian dance.flac',\r\n                    cover: 'https://lizhuo.space/64.png'\r\n                }\r\n            ]\r\n        });\r\n    \u003c/script\u003e\r\n\u003c/div\u003e\r\n\u003cdiv class=\"aplayer\" data-id=\"409931420\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\" style=\"--background-url: url('https://lizhuo.space/lc.jpg');\"\u003e\u003c/div\u003e\r\n\u003cdiv class=\"aplayer\" data-id=\"29718176\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\" style=\"--background-url: url('https://lizhuo.space/dog.png');\"\u003e\u003c/div\u003e\r\n\u003c!-- \u003cdiv class=\"aplayer\" data-id=\"18666397\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"\u003e\u003c/div\u003e --\u003e\r\n\u003c!-- \u003cdiv class=\"aplayer\" data-id=\"1483488615\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"\u003e\u003c/div\u003e --\u003e\r\n\u003c!-- \u003cdiv class=\"aplayer\" data-id=\"29718176\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"\u003e\u003c/div\u003e --\u003e\r\n\u003c!-- \u003cdiv class=\"aplayer\" data-id=\"857983\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"\u003e\u003c/div\u003e --\u003e","title":"热爱，让你成为自己~"},{"content":"\r1. 前言(๑✦ˑ_✦) 前年用 BT+Wordpress+阿里轻量化服务器 搭了个网站，当时挺上头的\u0026hellip;\u0026hellip; 后来由于服务确实卡顿，偶尔容易出问题，加上服务器每月有开销，当时又忙着准备保研和毕设，慢慢就搁置了\u0026hellip;\n前段时间，我导提到说 数字人应该有数字人的意识，最好能将自己的一生都数字化，细想起来，感觉颇显浪漫！搞起来(▼O▼ﾒ)！\n花了清明两天的时间骨架建完，还是布到公网吧，希望能定期输出新内容\u0026hellip;\n2. 摘要 Okay，个人博客的搭建过程，整体来说可以分三个部分：\n明确建站框架和基本流程：hugo+git、hexo+git、bt+wordpress 内容设计与自定义调整：结构熟悉（hugo\u0026amp;theme、自定义修改（需求\u0026amp;设计 内容发布与部署：内容与数据维护、公网发布、F\u0026amp;R 想得清楚才能做得漂亮! 灵魂三问，什么是博客？如何搭建？核心需求？ 博客是一种不错的管理方法和输出形式。你完全可以使用博客来记录、组织自己零碎的知识、经验所得，甚至于你的心理感受；维护博客的过程，也能很好锻炼你的统筹能力，更好地组织你的所想、所学、所得；此外，博客很可能是分享和展示自己的一种不错媒介\u0026hellip; 搭建博客与搭建网站的过程类似，除了一个内容加工平台或工具用于生成、编辑输出内容外，你还需要一个内容托管平台帮助你托管内容、供人访问，可以自建也可以租赁，这里 github 的优势就凸显出来了 基于 wordpress 建站比较适合商业用户，需要性能不错的服务器、域名资源，缺点网站结构相对复杂，访问容易卡顿、维护持续消耗成本；个人写作、技术博客用户，关注美观和生态，推荐 hexo ；若看重速度和轻量化，那 hugo 当仁不让 3. 主要内容 1. 明确建站框架和基本流程 本站基于 hugo 构建，演示主题为 blowfish\n2. 内容设计与自定义调整 关键需求与对应文件结构 问题1： 菜单栏用户块新增子块，填充铭言 需求：希望在博客名下面加一个子块，附写格言\n解决方案 对HTML和CSS进行修改，利用开发者模式定位博客名所在的html块，修改对应文件，新增子块，由于可能对显示作特殊要求，需要对css修改\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;nav class=\u0026#34;flex flex-col space-y-1\u0026#34;\u0026gt; {{ if not .Site.Params.disableTextInHeader | default true }} \u0026lt;a href=\u0026#34;{{ \u0026#34;\u0026#34; | relLangURL }}\u0026#34; class=\u0026#34;text-base font-medium text-gray-500 hover:text-gray-900\u0026#34;\u0026gt;{{ .Site.Title | markdownify }}\u0026lt;/a\u0026gt; {{ end }} {{ with .Site.Params.subtitle }} \u0026lt;div class=\u0026#34;subtitle text-sm text-gray-400\u0026#34;\u0026gt; {{ . }} \u0026lt;/div\u0026gt; {{ end }} \u0026lt;/nav\u0026gt; 1 2 3 4 5 /* Subtitle */ .subtitle { font-size: 0.75rem; /* 比主标题字体小 */ color: rgba(75, 85, 99, 0.8); /* 颜色和透明度 */ } 修改文件路径：\nhtml = D:\\LZ0o0\\themes\\blowfish\\layouts\\partials\\header\\basic.html\ncss = D:\\LZ0o0\\themes\\blowfish\\assets\\css\\compiled\\main.css\n问题2： 博客头像和菜单栏对齐 需求：博客头像和后面菜单条的高度不一致，影响美观\n解决方案 对HTML和CSS进行修改，确保头像和菜单栏高度一致，并保持水平对齐\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;div class=\u0026#34;header-container flex items-center justify-between\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;{{ \u0026#34;\u0026#34; | relLangURL }}\u0026#34; class=\u0026#34;flex items-center\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;{{ .Site.Title | markdownify }}\u0026lt;/span\u0026gt; {{ if eq $logo.MediaType.SubType \u0026#34;svg\u0026#34; }} \u0026lt;span class=\u0026#34;logo object-scale-down object-left nozoom\u0026#34;\u0026gt; {{ $logo.Content | safeHTML }} \u0026lt;/span\u0026gt; {{ else }} \u0026lt;img src=\u0026#34;{{ $logo.RelPermalink }}\u0026#34; width=\u0026#34;{{ div $logo.Width 2 }}\u0026#34; height=\u0026#34;{{ div $logo.Height 2 }}\u0026#34; class=\u0026#34;logo max-h-[5rem] max-w-[5rem] object-scale-down object-left nozoom\u0026#34; alt=\u0026#34;{{ .Site.Title }}\u0026#34; /\u0026gt; {{ end }} \u0026lt;/a\u0026gt; \u0026lt;div class=\u0026#34;flex flex-1 items-center justify-between\u0026#34;\u0026gt; \u0026lt;nav class=\u0026#34;flex flex-col space-y-1\u0026#34;\u0026gt; \u0026lt;!-- 菜单项 --\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 .header-container { height: 5rem; /* 确保容器的高度一致 */ display: flex; align-items: center; /* 垂直居中 */ justify-content: space-between; /* 水平分布 */ } .header-container .logo, .header-container .title-container { height: 100%; display: flex; align-items: center; /* 垂直居中 */ } .header-container .logo img { height: auto; max-height: 100%; } .header-container .title-container { margin-left: 1rem; /* 可以根据需要调整间距 */ } 修改文件路径：\nhtml = D:\\LZ0o0\\themes\\blowfish\\layouts\\partials\\header\\basic.html\ncss = D:\\LZ0o0\\themes\\blowfish\\assets\\css\\compiled\\main.css\n问题3： 将搜索按钮换成条状搜索框~ 需求：调整占位，搜索按钮换成条状（后增内容，弃用本条\n解决方案 修改html，将搜索按钮替换为一个条状的搜索框，并添加相应的CSS样式\n1 2 3 4 5 6 7 8 9 10 {{ if .Site.Params.enableSearch | default false }} \u0026lt;div class=\u0026#34;search-container flex items-center\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; id=\u0026#34;search-input\u0026#34; aria-label=\u0026#34;Search\u0026#34; placeholder=\u0026#34;Search...\u0026#34; class=\u0026#34;search-input text-base border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary-600 dark:focus:ring-primary-400\u0026#34; /\u0026gt; \u0026lt;button id=\u0026#34;search-button\u0026#34; aria-label=\u0026#34;Search\u0026#34; class=\u0026#34;search-button text-base hover:text-primary-600 dark:hover:text-primary-400 ml-2\u0026#34; title=\u0026#34;{{ i18n \u0026#34;search.open_button_title\u0026#34; }}\u0026#34;\u0026gt; {{ partial \u0026#34;icon.html\u0026#34; \u0026#34;search\u0026#34; }} \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; {{ end }} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 .search-container { display: flex; align-items: center; } .search-input { width: 200px; /* 设置搜索框的宽度 */ transition: width 0.3s ease-in-out; /* 添加过渡效果 */ } .search-input:focus { width: 300px; /* 在聚焦时扩展搜索框的宽度 */ } .search-button { background: none; border: none; cursor: pointer; padding: 0; margin-left: 8px; display: flex; align-items: center; } 修改文件路径：同上个问题\n3. 内容发布与部署 内容发布注意事项，以及公网部署方法\n4. 小结 refer ","permalink":"https://lz0o0.github.io/zh/posts/blog--%E7%AE%A1%E7%90%86-+-%E8%BE%93%E5%87%BA/","summary":"如何理解博客？博客构建的逻辑和步骤是怎样的？","title":"Blog == 管理 + 输出"},{"content":"\r1. 问题描述 本地使用 Hugo 启动时，网站样式能够正常显示，但部署到 GitHub Pages 后，样式无法加载（如上图所示）。通过浏览器 F12 调试，控制台报错信息如下：\n1 Failed to find a valid digest in the \u0026#39;integrity\u0026#39; attribute for resource \u0026#39;https://lz0o0.github.io/assets/css/stylesheet.6da9a63d25a9608bca2f7f907a0，30e887a7dd3c3f3918e4cc113129361414bda.css\u0026#39; with computed SHA-256 integrity \u0026#39;9J1myq6eoP1D8h8p5xqNPihFF+13Dyqob6ASlTrTye8=\u0026#39;. The resource has been blocked. SRI和校验失败： Subresource Integrity (SRI) 是一种安全机制，用于确保在加载资源时，它们的内容与预期的哈希值一致。如果资源的实际哈希值与 HTML 文件中 integrity 属性定义的不一致，浏览器会阻止加载资源。\n2. 原因\u0026amp;解法 根据报错信息，大致确认问题是因为 SRI 校验时hash值不匹配，CSS加载失败，从而导致网页样式无法正常显示，无法看到多彩的网页。公网上主要的解释和解决办法，主要是以下三种：\n1. Cloudflare对 JS 和 CSS，默认执行\u0026quot;Auto Minify\u0026quot;，文件压缩后和 hugo 的处理存在冲突，导致校验失效；对应禁用选项，刷新缓存即可\r2. 修改 Hugo 的文件，禁用指纹校验选项。具体而言，在config.yaml或者hugo.yaml中添加以下代码\r1 2 3 params: assets: disableFingerprinting: true 3. 修改 html 文件索引入口，禁用 SRI 校验：将文件`(themes\\PaperMod\\layouts\\partials\\head.html)`中的 **integrity** 参数索引都置空`(integrity=\u0026quot;\u0026quot;)`\r方法①本鲤不知道在哪配置，没有实操。但我认为可能是压缩的问题，因为本地加载并未出现类似问题，不一致大概来自云端的处理 方法②比较合理，然而，本鲤实际配置后没什么效果，可能是 hugo 不内置该参数了 使用方法③，本鲤成功显示了CSS样式。大部分教程只提示改(integrity=\u0026quot;{{ $stylesheet.Data.Integrity }}\u0026quot;)，但我建议你把文件中所有的 integrity 参数索引都置空，因为另外一处索引时可能也会报错，因此建议都置空\nMind！ 可按照231的顺序，如能解决最好，前端的问题比较多样，本鲤发现甚至有因为LF和CRLF问题的（比较有用的讨论或文档，附在文末 3. 小结 本文描述了Hugo+Papermod部署到github pages时，由于SRI校验失败，导致CSS文件无法正常加载，不显示网页样式内容的问题。在文档中列举了三种主要的解决方法，并且分析了可能的问题（may优化导致校验失效）。博主实际通过修改配置的html索引，禁用 SRI 校验选项，解决了该问题\n如有意指点，或碰到问题，欢迎留言讨论~\nrefer https://swopnil.com/blog/valid-digest-integrity-error-hugo-styling/ https://github.com/alanorth/hugo-theme-bootstrap4-blog/issues/53 https://stackoverflow.com/questions/65040931/hugo-failed-to-find-a-valid-digest-in-the-integrity-attribute-for-resource ","permalink":"https://lz0o0.github.io/zh/posts/hugo%E5%8F%91%E5%B8%83%E5%90%8Ecss%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD/","summary":"本文分析并解决了Hugo+Papermod部署到github pages时，由于SRI校验失败，导致CSS文件无法正常加载不显示网页样式内容的问题","title":"hugo发布后css无法加载"},{"content":"1. frp 源码获取 git：https://github.com/fatedier/frp/releases 解压：tar -zxvf frp_0.61.2_linux_amd64.tar.gz\n文件中包含 frpc、frpc.toml；frps、frps.toml；以及LICENSE文件，分别对应客户端和服务端的配置项设置，可删去相对的内容\n2. 配置 frps 服务端设置项 frps.toml文件配置： 1 2 3 4 5 6 7 8 9 bindPort = 7000 webServer.addr = \u0026#34;0.0.0.0\u0026#34; webServer.port = 7500 webServer.user = \u0026#34;admin\u0026#34; webServer.password = \u0026#34;admin\u0026#34; auth.method=\u0026#34;token\u0026#34; auth.token = \u0026#34;passtoken\u0026#34; 配置后启动即可，成功会显示初始化日志：./frps -c frps.toml，随后可以访问公网IP：7500网站查看访问面板\n后台挂载进程 利用systemd启动后台进程挂载，创建文件：vim /etc/systemd/system/frps.service，文件内容如下(指定了访问面板的信息和绑定端口)：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 [Unit] Description = frp server After = network.target syslog.target Wants = network.target [Service] Type=simple ExecStart = /dev-ops/frp/frps -c /dev-ops/frp/frps.toml ExecStop=/bin/kill $MAINPID Restart=always RestartSec=5 [Install] WantedBy = multi-user.target 文件创建成功后，启动即可：\n1 2 systemctl start frps systemctl status frps 3. 配置 frpc 客户端设置项 配置frpc.toml文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #你的云服务器公网ip serverAddr = \u0026#34;x.x.x.x\u0026#34; #连接到云服务器端口,需要和frps.toml配置文件中端口一致 serverPort = 7000 auth.method = \u0026#34;token\u0026#34; auth.token = \u0026#34;passtoken\u0026#34; #开放端口连接 [[proxies]] name = \u0026#34;test-tcp\u0026#34; type = \u0026#34;tcp\u0026#34; localIP = \u0026#34;127.0.0.1\u0026#34; localPort = 8080 remotePort = 6100 # 服务器需要开放该端口 #共享文件访问 [[proxies]] name = \u0026#34;d_drive\u0026#34; type = \u0026#34;tcp\u0026#34; remotePort = 6001 # 服务器上用于访问的端口，需要开放该端口 [proxies.plugin] type = \u0026#34;static_file\u0026#34; localPath = \u0026#34;D:\\\\\u0026#34; # 要对外暴露的目录 stripPrefix = \u0026#34;d_drive\u0026#34; # 访问路径名，此处即http://x.x.x.x:6001/d_drive/ httpUser = \u0026#34;username\u0026#34; # 用户名 httpPassword = \u0026#34;password\u0026#34; # 密码 4. 连接客户端与服务端 确保 frpc.exe 和 frpc.toml 位于同一目录。\n打开命令提示符（cmd）或 PowerShell，切换到 frpc.exe 所在目录：\n1 cd path\\to\\frp 执行以下命令启动客户端：\n1 .\\frpc.exe -c frpc.toml 如果提示权限问题，确保当前用户有执行权限，或者以管理员身份运行命令提示符。\n如果仍然无法执行，检查以下内容：\n确保 frpc.exe 文件未被杀毒软件拦截。 确保 frpc.toml 文件路径正确，且格式无误。 使用以下命令查看详细日志： 1 frpc.exe -c frpc.toml --log_level debug 5. 应用场景与实操 6. 小结 refer ","permalink":"https://lz0o0.github.io/zh/posts/%E5%88%A9%E7%94%A8-frp-%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/","summary":"frp 是一种反向代理工具, 被广泛用于内网穿透，能够将外网暴露内网服务，本文具体介绍了如何基于云服务器和frp源码实现简单的内网穿透，是一种很有意思和实际用处的技术","title":"利用 frp 实现内网穿透"}]